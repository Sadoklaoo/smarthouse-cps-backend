from collections import deque
from typing import Dict, List

# EventPool class is used to store all the events that are generated by the application.
# It has a pool of events with a maximum size of 100.


class EventPool:
    """Stores all generated events in a fixed-size queue."""

    def __init__(self, size=100):
        self.pool = deque(maxlen=size)

    def add_event(self, event: Dict):
        """Add a new event to the pool."""
        self.pool.append(event)

    def get_all_events(self) -> List[Dict]:
        """Retrieve all stored events."""
        return list(self.pool)

    def clear_events(self):
        """Clear all events from the pool."""
        self.pool.clear()


# Global instance of EventPool
event_pool = EventPool()
